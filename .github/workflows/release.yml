# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: release

on:
  push:
    branches: [ "release" ]

jobs:
  tag-release:
    name: tag-release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: install plugins
        run: npm install --no-save @semantic-release/git @semantic-release/changelog -D

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  build:
    needs:
      - tag-release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Get tag'
        id: tagName
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: update extension version
        working-directory: parmesan
        run: npx dot-json@1 "source/manifest.json" version "${{ steps.tagName.outputs.tag }}"

      - uses: actions/setup-node@v4
        with:
          node-version: 22
        working-directory: parmesan
      - run: |
          npm run build
          zip -r parmesan_${{ steps.tagName.outputs.tag }}.zip ./dist

      - name: Upload Extension Asset
        working-directory: parmesan
        uses: softprops/action-gh-release@v2
        with:
          files: |
            parmesan_${{ steps.tagName.outputs.tag }}.zip
          tag_name: ${{ steps.tagName.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # todo binary release
      #    - name: Set up Go
      #      uses: actions/setup-go@v4
      #      with:
      #        go-version: '1.23.3'

      #    - name: Build
      #      run: go build -ldflags "-w -s -X ctrl/core/updater.Version=${{ steps.tagName.outputs.tag }}" -o gouda_${{ steps.tagName.outputs.tag }}
      #    - name: Upload Release Asset
      #      uses: softprops/action-gh-release@v2
      #      with:
      #        files: |
      #          ctrl_linux_${{ steps.tagName.outputs.tag }}
      #        tag_name: ${{ steps.tagName.outputs.tag }}
      #      env:
      #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract major version
        id: major_version
        run: |
          VERSION=${{ steps.tagName.outputs.tag }}
          MAJOR_VERSION=$(echo $VERSION | cut -d'.' -f1)
          echo "major=$MAJOR_VERSION" >> $GITHUB_OUTPUT      

        ## docker image build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push version tagged
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gouda:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/gouda:${{ steps.tagName.outputs.tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/gouda:${{ steps.major_version.outputs.major }}
          labels: |
            org.opencontainers.image.title=gouda
            org.opencontainers.image.description=This is the stable version for gouda app.
            org.opencontainers.image.source=https://github.com/RA341/gouda
            org.opencontainers.image.version=${{ steps.tagName.outputs.tag }}
