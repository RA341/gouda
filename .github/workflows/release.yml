name: Release Pipeline

on:
  push:
    branches: ["release"]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  tag-release:
    name: Create Release Tag
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.get_tag.outputs.tag }}
      major_version: ${{ steps.major_version.outputs.major }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install semantic-release plugins
        run: |
          npm install --no-save \
            @semantic-release/git \
            @semantic-release/changelog -D

      - name: Generate Release Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Get Release Tag
        id: get_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Extract Major Version
        id: major_version
        run: |
          VERSION=${{ steps.get_tag.outputs.tag }}
          echo "major=$(echo $VERSION | cut -d'.' -f1)" >> $GITHUB_OUTPUT

  build-extension:
    needs: tag-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Update Extension Version
        working-directory: parmesan
        run: npx dot-json@1 "source/manifest.json" version "${{ needs.tag-release.outputs.new_tag }}"

      - name: Build and Package Extension
        working-directory: parmesan
        run: |
          npm i
          npm run build
          zip -r parmesan_${{ needs.tag-release.outputs.new_tag }}.zip ./dist

      - name: Upload Extension Asset
        uses: softprops/action-gh-release@v2
        with:
          files: parmesan/parmesan_${{ needs.tag-release.outputs.new_tag }}.zip
          tag_name: ${{ needs.tag-release.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    needs: tag-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gouda:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/gouda:${{ needs.tag-release.outputs.new_tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/gouda:${{ needs.tag-release.outputs.major_version }}
          labels: |
            org.opencontainers.image.title=gouda
            org.opencontainers.image.description=This is the stable version for gouda app.
            org.opencontainers.image.source=https://github.com/RA341/gouda
            org.opencontainers.image.version=${{ needs.tag-release.outputs.new_tag }}