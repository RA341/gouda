name: Build gouda native binaries

on:
  workflow_call:
    inputs:
      os:
        description: 'The operating system to run the build on (e.g., ubuntu-latest, windows-latest)'
        required: true
        type: string
      tag_name:
        description: 'The release tag name for uploading assets'
        required: true
        type: string
      flutter_version:
        description: 'Flutter version to use'
        required: false
        type: string
        default: '3.35.4'
      go_version:
        description: 'Go version to use'
        required: false
        type: string
        default: '1.25'

jobs:
  build:
    name: Build Gouda for ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    permissions:
      contents: write  # Allows checking out code and uploading release assets
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ inputs.flutter_version }}
          channel: 'stable'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}
          cache-dependency-path: |
            core/go.sum

      # OS-specific CGO dependencies
      - name: Install Linux CGO dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            gcc libgtk-3-dev libayatana-appindicator3-dev
        shell: bash

      - name: Setup Rust
        if: runner.os == 'Windows'
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install coreutils via cargo
        if: runner.os == 'Windows'
        run: |
          cargo install coreutils

      - name: Setup MSYS2 for Windows CGO
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-make
          # Add mingw-w64-x86_64-toolchain for a more complete C/C++ dev environment if needed
        # Ensure MSYS2/MinGW paths are correctly added for subsequent steps if 'go install' or 'goub' need them
        # This action usually handles PATH setup for its shell environment.

      - name: Install Task
        uses: go-task/setup-task@v1

      - name: Build for with task
        run: |
          task --taskfile Taskfile-build.yml build:${{ runner.os == 'Windows' && 'windows' || (runner.os == 'macOS' && 'macos' || 'linux') }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            .build/*
          tag_name: ${{ inputs.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
