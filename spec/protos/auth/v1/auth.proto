syntax = "proto3";

package auth.v1;

option go_package = "github.com/RA341/gouda/generated/auth/v1";

service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Logout(LogoutRequest) returns (LogoutResponse) {}

  rpc UserList(ListUsersRequest) returns (ListUsersResponse) {}
  rpc UserAdd(AddUserRequest) returns (AddUserResponse) {}
  rpc UserDelete(UserDeleteRequest) returns (UserDeleteResponse) {}
  rpc UserEdit(UserEditRequest) returns (UserEditResponse) {}

  rpc VerifySession(VerifySessionRequest) returns (VerifySessionResponse) {}
  rpc RefreshSession(RefreshSessionRequest) returns (RefreshSessionResponse) {}
}


message UserDeleteRequest {
  User user = 1;
}

message UserDeleteResponse {}

message UserEditRequest {
  User editUser = 1;
}

message UserEditResponse {}

message AddUserRequest {
  User user = 1;
}

message AddUserResponse {}

message ListUsersRequest {}

message ListUsersResponse {
  repeated User users = 1;
}

enum Role {
  Admin = 0;
  // normal user
  Mouse = 1;
  Unknown = 999;
}

message User {
  string username = 1;
  string password = 2;
  Role role = 3;
}

message LogoutRequest {
  string refresh = 2;
}

message LogoutResponse {}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  Session session = 1;
}

message RegisterRequest {
  string username = 1;
  string password = 2;
  string passwordVerify = 3;
}

message RegisterResponse {}

message VerifySessionRequest {
  string sessionToken = 1;
}

message VerifySessionResponse {}

message RefreshSessionRequest {
  string refreshToken = 1;
}

message RefreshSessionResponse {
  Session session = 1;
}

message Session {
  string refreshToken = 1;
  string sessionToken = 2;
}
