// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mam/v1/mam.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VipRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AmountInWeeks int32                  `protobuf:"varint,1,opt,name=amountInWeeks,proto3" json:"amountInWeeks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VipRequest) Reset() {
	*x = VipRequest{}
	mi := &file_mam_v1_mam_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipRequest) ProtoMessage() {}

func (x *VipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mam_v1_mam_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipRequest.ProtoReflect.Descriptor instead.
func (*VipRequest) Descriptor() ([]byte, []int) {
	return file_mam_v1_mam_proto_rawDescGZIP(), []int{0}
}

func (x *VipRequest) GetAmountInWeeks() int32 {
	if x != nil {
		return x.AmountInWeeks
	}
	return 0
}

type VipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Amount        float32                `protobuf:"fixed32,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	SeedBonus     float32                `protobuf:"fixed32,4,opt,name=SeedBonus,proto3" json:"SeedBonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VipResponse) Reset() {
	*x = VipResponse{}
	mi := &file_mam_v1_mam_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipResponse) ProtoMessage() {}

func (x *VipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mam_v1_mam_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipResponse.ProtoReflect.Descriptor instead.
func (*VipResponse) Descriptor() ([]byte, []int) {
	return file_mam_v1_mam_proto_rawDescGZIP(), []int{1}
}

func (x *VipResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VipResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VipResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *VipResponse) GetSeedBonus() float32 {
	if x != nil {
		return x.SeedBonus
	}
	return 0
}

type BonusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AmountInGB    int32                  `protobuf:"varint,1,opt,name=amountInGB,proto3" json:"amountInGB,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BonusRequest) Reset() {
	*x = BonusRequest{}
	mi := &file_mam_v1_mam_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BonusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusRequest) ProtoMessage() {}

func (x *BonusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mam_v1_mam_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusRequest.ProtoReflect.Descriptor instead.
func (*BonusRequest) Descriptor() ([]byte, []int) {
	return file_mam_v1_mam_proto_rawDescGZIP(), []int{2}
}

func (x *BonusRequest) GetAmountInGB() int32 {
	if x != nil {
		return x.AmountInGB
	}
	return 0
}

type BonusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Amount        float32                `protobuf:"fixed32,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Seedbonus     float32                `protobuf:"fixed32,4,opt,name=Seedbonus,proto3" json:"Seedbonus,omitempty"`
	Uploaded      int64                  `protobuf:"varint,5,opt,name=Uploaded,proto3" json:"Uploaded,omitempty"`
	Downloaded    int64                  `protobuf:"varint,6,opt,name=Downloaded,proto3" json:"Downloaded,omitempty"`
	UploadFancy   string                 `protobuf:"bytes,7,opt,name=UploadFancy,proto3" json:"UploadFancy,omitempty"`
	DownloadFancy string                 `protobuf:"bytes,8,opt,name=DownloadFancy,proto3" json:"DownloadFancy,omitempty"`
	Ratio         float32                `protobuf:"fixed32,9,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BonusResponse) Reset() {
	*x = BonusResponse{}
	mi := &file_mam_v1_mam_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BonusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusResponse) ProtoMessage() {}

func (x *BonusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mam_v1_mam_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusResponse.ProtoReflect.Descriptor instead.
func (*BonusResponse) Descriptor() ([]byte, []int) {
	return file_mam_v1_mam_proto_rawDescGZIP(), []int{3}
}

func (x *BonusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BonusResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BonusResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BonusResponse) GetSeedbonus() float32 {
	if x != nil {
		return x.Seedbonus
	}
	return 0
}

func (x *BonusResponse) GetUploaded() int64 {
	if x != nil {
		return x.Uploaded
	}
	return 0
}

func (x *BonusResponse) GetDownloaded() int64 {
	if x != nil {
		return x.Downloaded
	}
	return 0
}

func (x *BonusResponse) GetUploadFancy() string {
	if x != nil {
		return x.UploadFancy
	}
	return ""
}

func (x *BonusResponse) GetDownloadFancy() string {
	if x != nil {
		return x.DownloadFancy
	}
	return ""
}

func (x *BonusResponse) GetRatio() float32 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

type SearchResults struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Results []*Book                `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// total found
	Found int32 `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	// total results
	Total         int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResults) Reset() {
	*x = SearchResults{}
	mi := &file_mam_v1_mam_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResults) ProtoMessage() {}

func (x *SearchResults) ProtoReflect() protoreflect.Message {
	mi := &file_mam_v1_mam_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResults.ProtoReflect.Descriptor instead.
func (*SearchResults) Descriptor() ([]byte, []int) {
	return file_mam_v1_mam_proto_rawDescGZIP(), []int{4}
}

func (x *SearchResults) GetResults() []*Book {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResults) GetFound() int32 {
	if x != nil {
		return x.Found
	}
	return 0
}

func (x *SearchResults) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Book struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Author        string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Format        string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	Length        string                 `protobuf:"bytes,5,opt,name=length,proto3" json:"length,omitempty"`
	TorrentLink   string                 `protobuf:"bytes,6,opt,name=torrent_link,json=torrentLink,proto3" json:"torrent_link,omitempty"`
	Category      int32                  `protobuf:"varint,7,opt,name=category,proto3" json:"category,omitempty"`
	Thumbnail     string                 `protobuf:"bytes,8,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Size          string                 `protobuf:"bytes,9,opt,name=size,proto3" json:"size,omitempty"`
	Seeders       int32                  `protobuf:"varint,10,opt,name=seeders,proto3" json:"seeders,omitempty"`
	Leechers      int32                  `protobuf:"varint,11,opt,name=leechers,proto3" json:"leechers,omitempty"`
	Added         string                 `protobuf:"bytes,12,opt,name=added,proto3" json:"added,omitempty"`
	Tags          string                 `protobuf:"bytes,13,opt,name=tags,proto3" json:"tags,omitempty"`
	Completed     int32                  `protobuf:"varint,14,opt,name=completed,proto3" json:"completed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Book) Reset() {
	*x = Book{}
	mi := &file_mam_v1_mam_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_mam_v1_mam_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_mam_v1_mam_proto_rawDescGZIP(), []int{5}
}

func (x *Book) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Book) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Book) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Book) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Book) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

func (x *Book) GetTorrentLink() string {
	if x != nil {
		return x.TorrentLink
	}
	return ""
}

func (x *Book) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *Book) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *Book) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Book) GetSeeders() int32 {
	if x != nil {
		return x.Seeders
	}
	return 0
}

func (x *Book) GetLeechers() int32 {
	if x != nil {
		return x.Leechers
	}
	return 0
}

func (x *Book) GetAdded() string {
	if x != nil {
		return x.Added
	}
	return ""
}

func (x *Book) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *Book) GetCompleted() int32 {
	if x != nil {
		return x.Completed
	}
	return 0
}

type FreeLeechInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`       // "fl", "VIP", etc.
	Expires       string                 `protobuf:"bytes,2,opt,name=expires,proto3" json:"expires,omitempty"` // Expiration date if applicable
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreeLeechInfo) Reset() {
	*x = FreeLeechInfo{}
	mi := &file_mam_v1_mam_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreeLeechInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeLeechInfo) ProtoMessage() {}

func (x *FreeLeechInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mam_v1_mam_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeLeechInfo.ProtoReflect.Descriptor instead.
func (*FreeLeechInfo) Descriptor() ([]byte, []int) {
	return file_mam_v1_mam_proto_rawDescGZIP(), []int{6}
}

func (x *FreeLeechInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FreeLeechInfo) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_mam_v1_mam_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_mam_v1_mam_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_mam_v1_mam_proto_rawDescGZIP(), []int{7}
}

func (x *Query) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

var File_mam_v1_mam_proto protoreflect.FileDescriptor

const file_mam_v1_mam_proto_rawDesc = "" +
	"\n" +
	"\x10mam/v1/mam.proto\x12\x06mam.v1\"2\n" +
	"\n" +
	"VipRequest\x12$\n" +
	"\ramountInWeeks\x18\x01 \x01(\x05R\ramountInWeeks\"q\n" +
	"\vVipResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x12\n" +
	"\x04Type\x18\x02 \x01(\tR\x04Type\x12\x16\n" +
	"\x06Amount\x18\x03 \x01(\x02R\x06Amount\x12\x1c\n" +
	"\tSeedBonus\x18\x04 \x01(\x02R\tSeedBonus\".\n" +
	"\fBonusRequest\x12\x1e\n" +
	"\n" +
	"amountInGB\x18\x01 \x01(\x05R\n" +
	"amountInGB\"\x8d\x02\n" +
	"\rBonusResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x12\n" +
	"\x04Type\x18\x02 \x01(\tR\x04Type\x12\x16\n" +
	"\x06Amount\x18\x03 \x01(\x02R\x06Amount\x12\x1c\n" +
	"\tSeedbonus\x18\x04 \x01(\x02R\tSeedbonus\x12\x1a\n" +
	"\bUploaded\x18\x05 \x01(\x03R\bUploaded\x12\x1e\n" +
	"\n" +
	"Downloaded\x18\x06 \x01(\x03R\n" +
	"Downloaded\x12 \n" +
	"\vUploadFancy\x18\a \x01(\tR\vUploadFancy\x12$\n" +
	"\rDownloadFancy\x18\b \x01(\tR\rDownloadFancy\x12\x14\n" +
	"\x05Ratio\x18\t \x01(\x02R\x05Ratio\"c\n" +
	"\rSearchResults\x12&\n" +
	"\aresults\x18\x01 \x03(\v2\f.mam.v1.BookR\aresults\x12\x14\n" +
	"\x05found\x18\x02 \x01(\x05R\x05found\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x05R\x05total\"\xe3\x02\n" +
	"\x04Book\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x12\x16\n" +
	"\x06format\x18\x04 \x01(\tR\x06format\x12\x16\n" +
	"\x06length\x18\x05 \x01(\tR\x06length\x12!\n" +
	"\ftorrent_link\x18\x06 \x01(\tR\vtorrentLink\x12\x1a\n" +
	"\bcategory\x18\a \x01(\x05R\bcategory\x12\x1c\n" +
	"\tthumbnail\x18\b \x01(\tR\tthumbnail\x12\x12\n" +
	"\x04size\x18\t \x01(\tR\x04size\x12\x18\n" +
	"\aseeders\x18\n" +
	" \x01(\x05R\aseeders\x12\x1a\n" +
	"\bleechers\x18\v \x01(\x05R\bleechers\x12\x14\n" +
	"\x05added\x18\f \x01(\tR\x05added\x12\x12\n" +
	"\x04tags\x18\r \x01(\tR\x04tags\x12\x1c\n" +
	"\tcompleted\x18\x0e \x01(\x05R\tcompleted\"=\n" +
	"\rFreeLeechInfo\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x18\n" +
	"\aexpires\x18\x02 \x01(\tR\aexpires\"\x1d\n" +
	"\x05Query\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query2\xa8\x01\n" +
	"\n" +
	"MamService\x12.\n" +
	"\x06Search\x12\r.mam.v1.Query\x1a\x15.mam.v1.SearchResults\x121\n" +
	"\x06BuyVip\x12\x12.mam.v1.VipRequest\x1a\x13.mam.v1.VipResponse\x127\n" +
	"\bBuyBonus\x12\x14.mam.v1.BonusRequest\x1a\x15.mam.v1.BonusResponseBx\n" +
	"\n" +
	"com.mam.v1B\bMamProtoP\x01Z'github.com/RA341/gouda/generated/mam/v1\xa2\x02\x03MXX\xaa\x02\x06Mam.V1\xca\x02\x06Mam\\V1\xe2\x02\x12Mam\\V1\\GPBMetadata\xea\x02\aMam::V1b\x06proto3"

var (
	file_mam_v1_mam_proto_rawDescOnce sync.Once
	file_mam_v1_mam_proto_rawDescData []byte
)

func file_mam_v1_mam_proto_rawDescGZIP() []byte {
	file_mam_v1_mam_proto_rawDescOnce.Do(func() {
		file_mam_v1_mam_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mam_v1_mam_proto_rawDesc), len(file_mam_v1_mam_proto_rawDesc)))
	})
	return file_mam_v1_mam_proto_rawDescData
}

var file_mam_v1_mam_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_mam_v1_mam_proto_goTypes = []any{
	(*VipRequest)(nil),    // 0: mam.v1.VipRequest
	(*VipResponse)(nil),   // 1: mam.v1.VipResponse
	(*BonusRequest)(nil),  // 2: mam.v1.BonusRequest
	(*BonusResponse)(nil), // 3: mam.v1.BonusResponse
	(*SearchResults)(nil), // 4: mam.v1.SearchResults
	(*Book)(nil),          // 5: mam.v1.Book
	(*FreeLeechInfo)(nil), // 6: mam.v1.FreeLeechInfo
	(*Query)(nil),         // 7: mam.v1.Query
}
var file_mam_v1_mam_proto_depIdxs = []int32{
	5, // 0: mam.v1.SearchResults.results:type_name -> mam.v1.Book
	7, // 1: mam.v1.MamService.Search:input_type -> mam.v1.Query
	0, // 2: mam.v1.MamService.BuyVip:input_type -> mam.v1.VipRequest
	2, // 3: mam.v1.MamService.BuyBonus:input_type -> mam.v1.BonusRequest
	4, // 4: mam.v1.MamService.Search:output_type -> mam.v1.SearchResults
	1, // 5: mam.v1.MamService.BuyVip:output_type -> mam.v1.VipResponse
	3, // 6: mam.v1.MamService.BuyBonus:output_type -> mam.v1.BonusResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mam_v1_mam_proto_init() }
func file_mam_v1_mam_proto_init() {
	if File_mam_v1_mam_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mam_v1_mam_proto_rawDesc), len(file_mam_v1_mam_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mam_v1_mam_proto_goTypes,
		DependencyIndexes: file_mam_v1_mam_proto_depIdxs,
		MessageInfos:      file_mam_v1_mam_proto_msgTypes,
	}.Build()
	File_mam_v1_mam_proto = out.File
	file_mam_v1_mam_proto_goTypes = nil
	file_mam_v1_mam_proto_depIdxs = nil
}
